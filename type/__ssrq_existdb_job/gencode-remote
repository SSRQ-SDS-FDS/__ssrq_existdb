#!/bin/sh -e
#
# 2021 Dennis Camera (dennis.camera at ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

join() (IFS=$1; shift; echo "$*")
quote() { printf "'%s'" "$(printf '%s' "$*" | sed -e "s/'/'\\\\''/g")"; }

exist_home=$(cat "${__object:?}/parameter/exist-home")

remote_find_saxon() {
	! ${_found_saxon:-false} || return 0

	cat <<-EOF
	saxon_jar=\$(find $(quote "${exist_home:?}/lib") -name 'Saxon-HE-*.jar' -prune | head -n1)
	test -s "\${saxon_jar}" || {
	    echo 'Cannot find Saxon' >&2
	    exit 1
	}
	EOF
	_found_saxon=true
}

if test -f "${__object:?}/parameter/name"
then
	job_name=$(cat "${__object:?}/parameter/name")
else
	job_name=${__object_id?:}
fi


state_should=$(cat "${__object:?}/parameter/state")
state_is=$(sh "${__type:?}/files/job_state.sh")

test "${state_should}" != "${state_is}" || exit 0

case ${state_should}
in
	(present)
		exist_conf=${exist_home:?}/etc/conf.xml

		# using `<' as the separator is kinda stupid, but it's the only
		# character not allowed in XML attributesâ€¦
		# https://www.w3.org/TR/REC-xml/#NT-AttValue
		params=$(LC_ALL=C tr '\n' '<' <"${__object:?}/parameter/parameter")
		params=${params%<}

		job_args=$(
			add_arg() {
				_args=${_args-}${_args:+ }"$1"="$(quote "$2")"
			}
			add_arg_param() {
				if test -f "${__object:?}/parameter/$2"
				then
					add_arg "$1" "$(cat "${__object:?}/parameter/$2")"
				fi
			}

			add_arg name "${job_name}"
			add_arg params "${params}"

			add_arg_param class class
			add_arg_param cron-trigger cron
			add_arg_param type type
			add_arg_param xquery xquery

			if test -f "${__object:?}/parameter/unschedule-on-exception"
			then
				add_arg unschedule-on-exception yes
			else
				add_arg unschedule-on-exception no
			fi

			echo "${_args}")

		remote_find_saxon
		cat <<-CODE
		java -jar "\${saxon_jar}" -xsl:- -s:$(quote "${exist_conf}") -o:$(quote "${exist_conf}.tmp") ${job_args} <<'EOF' \
		&& cat $(quote "${exist_conf}.tmp") >$(quote "${exist_conf}") || exit
		$(cat "${__type:?}/files/add-job.xsl")
		EOF
		rm -f $(quote "${exist_conf}.tmp")
		CODE
		;;
	(absent)
		exist_conf=${exist_home:?}/etc/conf.xml

		remote_find_saxon
		cat <<-CODE
		java -jar "\${saxon_jar}" -xsl:- -s:$(quote "${exist_conf}") -o:$(quote "${exist_conf}.tmp") name=$(quote "${job_name}") <<'EOF' \
		&& cat $(quote "${exist_conf}.tmp") >$(quote "${exist_conf}") || exit
		$(cat "${__type:?}/files/del-job.xsl")
		EOF
		rm -f $(quote "${exist_conf}.tmp")
		CODE
		;;
	(*)
		printf 'Invalid --state: %s\n' "${state_should}" >&2
		exit 1
		;;
esac
