#!/bin/sh -e
#
# 2021 Dennis Camera (dennis.camera at ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

quote() { printf "'%s'" "$(printf '%s' "$*" | sed -e "s/'/'\\\\''/g")"; }

os=$(cat "${__global:?}/explorer/os")

. "${__type:?}/files/params.sh"

################################################################################
# Install dependencies

case ${os}
in
	(debian|devuan|ubuntu)
		if test ! -s "${__object:?}/parameter/java-home"
		then
			# Install Java if no --java-home set
			__package_apt default-jre
		fi
		;;
	(*)
		: "${__type:?}"  # make shellcheck happy
		printf "Your operating system (%s) is currently not supported by this type (%s)\n" "${os}" "${__type##*/}" >&2
		printf "Please contribute an implementation for it if you can.\n" >&2
		exit 1
		;;
esac


################################################################################
# Download and unpack dist tarball

download_required=true  # FIXME

if ${download_required}
then
	__download "/tmp/${exist_dist_url##*/}" \
		--url "${exist_dist_url}" \
		--download remote \
		--sum "sha256:${sha256_should:?}"
	exist_download_require="${exist_download_require-}${exist_download_require:+ }__download/tmp/${exist_dist_url##*/}"

	require=${exist_download_require} \
	__unpack "/tmp/${exist_dist_url##*/}" \
		--destination "${exist_home:?}" \
		--sum-file "${exist_home:?}/.${exist_dist_url##*/}.cdist__unpack_sum" \
		--tar-strip 1 \
		--tar-extra-args ' -o'
	exist_download_require="${exist_download_require-}${exist_download_require:+ }__unpack/tmp/${exist_dist_url##*/}"
fi

################################################################################
# User

require=${exist_download_require-} \
__user "${exist_user:?}" \
	--system \
	--shell /sbin/nologin \
	--comment 'eXist-db service user' \
	--home "${exist_data_base:?}" \
	--create-home


################################################################################
# Create and patch directories

require="__user/${exist_user:?}" \
__directory "${exist_data}" \
	--owner "${exist_user:?}" --group "${exist_user:?}" --mode 0755

require="${exist_download_require-} __user/${exist_user:?} __directory/${exist_data}"
export require

# Fix up data/ link
__link "${exist_home:?}/data" \
	--type symbolic \
	--source "${exist_data:?}"

# Fix up logs/ link
require="__user/${exist_user:?}" \
__directory "/var/opt/log/exist/${version_selected:?}" \
	--owner "${exist_user:?}" --group "${exist_user:?}" --mode 0750 \
	--parents

__directory "${exist_home:?}/logs" \
	--state absent

require="__directory/${exist_home:?}/logs __directory/var/opt/log/exist/${version_selected:?}" \
__link "${exist_home:?}/logs" \
	--type symbolic \
	--source "/var/opt/log/exist/${version_selected:?}"


################################################################################
# Set up init scripts

if test -f "${__object:?}/parameter/java-home"
then
	init_java_home=$(cat "${__object:?}/parameter/java-home")
fi
if test -f "${__object:?}/parameter/java-opts"
then
	init_java_opts=$(cat "${__object:?}/parameter/java-opts")
	init_java_opts=${init_java_opts# }
fi

case ${exist_init_type:?}
in
	(debian-sysvinit)
		# install the sysvinit scripts
		sysv_init_script_path=/etc/init.d/exist-db

		__file "${sysv_init_script_path:?}" --state present \
			--owner 0 --group 0 --mode 0755 \
			--source - <<-EOF
		$(sed \
			  -e "s/%%PACKAGE_VERSION%%/${version_selected:?}/g" \
			  -e "s#%%EXIST_HOME%%#${exist_home:?}#g" \
			  -e "s:%%EXIST_USER%%:${exist_user:?}:g" \
			  -e "s:%%EXIST_GROUP%%:${exist_user:?}:g" \
			<"${__type:?}/files/init/debian-sysv/exist-db.init")
		EOF

		defaults_var() {
			if test -n "$2"
			then
				printf '%s=%s\n' "$1" "$(quote "$2")"
			else
				printf '# %s=\n' "$1"
			fi
		}

		__file "/etc/default/${sysv_init_script_path##*/}" --state present \
			--owner 0 --group 0 --mode 0644 \
			--source - <<-EOF
		##############################################################
		# NOTE: This file is ignored when the init system is systemd #
		##############################################################
		#
		# Default settings for ${sysv_init_script_path##*/}.
		# This file is sourced by ${sysv_init_script_path}.
		#

		# Path of the JVM to use for eXist-db:
		# Will try to auto-detect the JVM to use if unset.
		$(defaults_var JAVA_HOME "${init_java_home-}")

		# Additional arguments to pass to the JVM:
		$(defaults_var JAVA_OPTS "${init_java_opts-}")
		EOF

		exist_init_scripts="__file${sysv_init_script_path:?} __file/etc/default/${sysv_init_script_path##*/}"
		;;
	(systemd)
		systemd_service_file=/etc/systemd/system/exist-db.service

		systemd_environ=${systemd_environ-}${systemd_environ:+ }${init_java_home:+JAVA_HOME=$(quote "${init_java_home}")}
		systemd_environ=${systemd_environ-}${systemd_environ:+ }${init_java_opts:+JAVA_OPTS=$(quote "${init_java_opts}")}

		__file "${systemd_service_file:?}" --state present \
			--owner 0 --group 0 --mode 0755 \
			--onchange 'systemctl daemon-reload' \
			--source - <<-EOF
		$(sed \
			  -e "s/%%PACKAGE_VERSION%%/${version_selected:?}/g" \
			  -e "s#%%EXIST_HOME%%#${exist_home:?}#g" \
			..-e "s:%%EXIST_USER%%:${exist_user:?}:g" \
			..-e "s:%%EXIST_GROUP%%:${exist_user:?}:g" \
			..-e "s:%%ENVIRON%%:${systemd_environ:?}:g" \
			<"${__type:?}/files/init/systemd/exist-db.service")
		EOF

		exist_init_scripts="__file${systemd_service_file}"
		;;
esac

# Start on boot
require=${exist_init_scripts:?} \
__start_on_boot exist-db
