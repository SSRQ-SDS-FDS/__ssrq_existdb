#!/bin/sh -e
#
# 2021 Dennis Camera (dennis.camera at ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

quote() { printf "'%s'" "$(printf '%s' "$*" | sed -e "s/'/'\\\\''/g")"; }

. "${__type:?}/files/params.sh"


################################################################################
# Update eXist-db's conf.xml

conf_should=$(
	cset() { printf '%s=%s\n' "$1" "$2"; }

	{
		if test ! -f "${__object:?}/parameter/no-sync-on-commit"
		then
			cset sync-on-commit yes
		else
			cset sync-on-commit no
		fi

		for _opt in cache-size page-size sync-period
		do
			if test -f "${__object:?}/parameter/${_opt}"
			then
				cset "${_opt}" "$(head -n1 "${__object:?}/parameter/${_opt}")"
			fi
		done

		cset files "${exist_data:?}"
	} | LC_ALL=C sort -t= -k1)


if ! {
		printf '%s\n' "${conf_should}"
		# unused options are taken from the explorer so that cmp works
		printf '%s\n' "${conf_should}" \
		| LC_ALL=C join -t= -v1 -1 1 -2 1 "${__object:?}/explorer/conf_values" -
	} | LC_ALL=C sort -t= -k1 | cmp -s "${__object:?}/explorer/conf_values" -
then
	# conf must be updated

	# quote $conf_should values
	param_should=$(
		IFS='='
		while read -r _k _v
		do
			printf ' %s=%s' "${_k}" "$(quote "${_v}")"
		done <<-EOF
		${conf_should}
		EOF
		)

	echo
	if test -s "${__object:?}/parameter/java-home"
	then
		java_home=$(cat "${__object:?}/parameter/java-home")
		# shellcheck disable=SC2016
		printf 'java_bin=$(find %s/jre/bin %s/bin -name java 2>/dev/null | head -n1)\n' \
			"$(quote "${java_home}")" "$(quote "${java_home}")"
	else
		# shellcheck disable=SC2016
		printf 'java_bin=$(command -v java)\n'
	fi

	cat <<-CODE
	test -x "\${java_bin}" || {
	    echo 'Cannot find java' >&2
	    exit 1
	}

	saxon_jar=\$(find $(quote "${exist_home:?}/lib") -name 'Saxon-HE-*.jar' -prune | head -n1)
	test -s "\${saxon_jar}" || {
	    echo 'Cannot find Saxon' >&2
	    exit 1
	}

	"\${java_bin}" -cp "\${saxon_jar}" net.sf.saxon.Transform -xsl:- -s:$(quote "${exist_conf:?}") -o:$(quote "${exist_conf:?}.tmp") ${param_should# } <<'EOF' \
	&& cat $(quote "${exist_conf:?}.tmp") >$(quote "${exist_conf:?}") || exit
	$(cat "${__type:?}/files/update-conf.xsl")
	EOF
	rm -f $(quote "${exist_conf}.tmp")
	CODE

	echo 'conf.xml changed' >>"${__messages_out:?}"
fi


################################################################################
# Initialise eXist-db after __unpack

# FIXME: the file name should be escaped to be valid in a POSIX BRE
if grep -q -e "^__unpack/tmp/${exist_dist_url##*/}" "${__messages_in:?}"
then
	case ${exist_init_type:?}
	in
		(debian-sysvinit)
			cat <<-EOF

			if /etc/init.d/existdb status >/dev/null 2>&1
			then
			    /etc/init.d/existdb restart
			else
			    /etc/init.d/existdb start
			fi || {
			    echo 'Failed to start eXist-db' >&2
			    exit 1
			}
			EOF
			;;
		(systemd)
			echo 'systemctl start existdb.service'
			;;
		(*)
			echo 'unsupported init' >&2
			exit 1
			;;
	esac
	echo 'start service' >>"${__messages_out:?}"

	cat <<-EOF

	exist_logfile=$(quote "${exist_home:?}/logs/exist.log")

	# wait for log file to be created
	while test \$((_tries)) -lt 10
	do
	    if test -f "\${exist_logfile}"
	    then
	        break
	    fi
	    sleep 1
	    : \$((_tries+=1))
	done

	# wait a maximum of 5 minutes for eXist to start up so that other types can
	# depend on eXist-db to be running.
	# a start up is considered to have failed if either no log file exists after
	# 10 seconds (see above) or the magic line does not appear in the log file
	# after 5 minutes.
	test -f "\${exist_logfile}" \\
	&& tail -n0 -F "\${exist_logfile:?}" \\
	   | timeout -v 300 \\
	       sed -n -e '/Server has started, listening on:/q' \\
	|| {
	    echo 'It seems eXist-db failed to start.' >&2
	    echo 'Aborting.' >&2
	    exit 1
	}
	EOF
fi
